<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Carebase Collaborator Invite</title>
    <link
      rel="stylesheet"
      href="https://fonts.googleapis.com/css2?family=Inter:wght@400;600;700&display=swap"
    />
    <style>
      :root {
        color-scheme: light dark;
      }
      * {
        box-sizing: border-box;
      }
      body {
        font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif;
        margin: 0;
        padding: 0;
        background: #0f172a;
        color: #0f172a;
      }
      .page {
        min-height: 100vh;
        display: flex;
        align-items: center;
        justify-content: center;
        padding: 24px;
        background: linear-gradient(135deg, #0f172a, #0b5d3b);
      }
      .card {
        width: 100%;
        max-width: 440px;
        background: #ffffff;
        border-radius: 18px;
        padding: 32px;
        box-shadow: 0 24px 60px rgba(15, 23, 42, 0.2);
      }
      h1 {
        margin: 0 0 12px;
        font-size: 24px;
        font-weight: 700;
        color: #064e3b;
      }
      p {
        margin: 0 0 16px;
        font-size: 15px;
        line-height: 1.6;
        color: #1f2937;
      }
      .status {
        background: #ecfdf5;
        border-radius: 12px;
        padding: 16px;
        margin: 24px 0;
        display: none;
      }
      .status h2 {
        margin: 0 0 8px;
        font-size: 18px;
        font-weight: 600;
        color: #047857;
      }
      .status.error {
        background: #fef2f2;
      }
      .status.error h2 {
        color: #b91c1c;
      }
      .status.neutral {
        background: #f9fafb;
      }
      .status.neutral h2 {
        color: #4b5563;
      }
      .actions {
        display: flex;
        flex-direction: column;
        gap: 12px;
      }
      .button {
        display: inline-flex;
        justify-content: center;
        align-items: center;
        padding: 12px 18px;
        border-radius: 10px;
        font-weight: 600;
        font-size: 15px;
        cursor: pointer;
        text-decoration: none;
        transition: transform 0.15s ease, box-shadow 0.15s ease;
        border: none;
      }
      .button.primary {
        background: #047857;
        color: #fff;
        box-shadow: 0 12px 24px rgba(4, 120, 87, 0.25);
      }
      .button.secondary {
        background: #f9fafb;
        color: #047857;
        border: 1px solid rgba(4, 120, 87, 0.12);
      }
      .button.copy {
        font-size: 13px;
        padding: 10px 14px;
        align-self: flex-start;
      }
      .button:disabled {
        opacity: 0.6;
        cursor: not-allowed;
        box-shadow: none;
      }
      .button:not(:disabled):hover {
        transform: translateY(-1px);
      }
      .token-box {
        margin-top: 12px;
        font-family: 'SFMono-Regular', 'Menlo', 'Monaco', 'Consolas', monospace;
        font-size: 13px;
        word-break: break-all;
        background: #f3f4f6;
        color: #111827;
        padding: 12px;
        border-radius: 10px;
      }
      footer {
        margin-top: 32px;
        font-size: 12px;
        color: rgba(17, 24, 39, 0.6);
        text-align: center;
      }
    </style>
  </head>
  <body>
    <div class="page">
      <div class="card">
        <h1>Carebase Invite</h1>
        <p>
          Opening the Carebase app on your phone or tablet is the quickest way to finish accepting this invite.
        </p>

        <div id="status" class="status">
          <h2 id="statusTitle"></h2>
          <p id="statusMessage"></p>
        </div>

        <div id="actions" class="actions" style="display: none;">
          <button id="openApp" class="button primary">Open Carebase app</button>
          <button id="downloadApp" class="button secondary">Get the app</button>
        </div>

        <div id="tokenSection" style="display: none;">
          <p>
            Need to finish later? Copy this code and paste it into the Carebase app when prompted:
          </p>
          <div id="tokenBox" class="token-box"></div>
          <button id="copyToken" class="button copy">Copy invite code</button>
        </div>

        <footer>
          Having trouble? Reply to your invite email and we’ll help you out.
        </footer>
      </div>
    </div>

    <script>
      const token = '<%= token %>';
      const isLoggedIn = <%= user ? 'true' : 'false' %>;
      const statusEl = document.getElementById('status');
      const statusTitle = document.getElementById('statusTitle');
      const statusMessage = document.getElementById('statusMessage');
      const tokenSection = document.getElementById('tokenSection');
      const tokenBox = document.getElementById('tokenBox');
      const copyButton = document.getElementById('copyToken');
      const openAppButton = document.getElementById('openApp');
      const downloadAppButton = document.getElementById('downloadApp');
      const actions = document.getElementById('actions');
      const appOpenUrl = '<%= appOpenUrl %>';
      const appDownloadUrl = '<%= appDownloadUrl %>';

      const playSuccess = (message) => {
        statusEl.classList.remove('error', 'neutral');
        statusEl.classList.add('success');
        statusTitle.textContent = 'Invite accepted!';
        statusMessage.textContent = message;
        statusEl.style.display = 'block';
      };

      const playInfo = (title, message) => {
        statusEl.classList.remove('error', 'success');
        statusEl.classList.add('neutral');
        statusTitle.textContent = title;
        statusMessage.textContent = message;
        statusEl.style.display = 'block';
      };

      const playError = (message) => {
        statusEl.classList.remove('success', 'neutral');
        statusEl.classList.add('error');
        statusTitle.textContent = 'Invite could not be accepted';
        statusMessage.textContent = message;
        statusEl.style.display = 'block';
      };

      const attemptAccept = async () => {
        if (!token) {
          playInfo('Enter this invite in the app', 'We didn’t spot an invite token in the link.');
          tokenSection.style.display = 'block';
          return;
        }

        tokenSection.style.display = 'block';
        tokenBox.textContent = token;

        if (!isLoggedIn) {
          playInfo(
            'Almost there',
            'Sign in on the Carebase mobile app with this email, then we’ll connect you automatically.'
          );
          return;
        }

        try {
          const response = await fetch('/api/collaborators/accept', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            credentials: 'include',
            body: JSON.stringify({ token }),
          });

        if (response.ok) {
          playSuccess('Open the Carebase app to see the shared plan.');
          return;
        }

        if (response.status === 404) {
          playError('This invite link may have already been used or expired.');
          return;
        }

        if (response.status === 403) {
          playError('You’re signed in as a different email. Log out and try the invited email.');
          return;
        }

        if (response.status === 401) {
          playInfo(
            'Almost there',
            'Sign in on the Carebase mobile app with this email, then we’ll connect you automatically.'
          );
            return;
          }

          playError('We hit a snag accepting this invite. Try again from the app.');
        } catch (error) {
          console.error('Accept invite error', error);
          playError('We hit a snag accepting this invite. Try again from the app.');
        }
      };

      copyButton.addEventListener('click', async () => {
        try {
          await navigator.clipboard.writeText(token);
          copyButton.textContent = 'Copied!';
          setTimeout(() => (copyButton.textContent = 'Copy invite code'), 1500);
        } catch (error) {
          console.warn('Clipboard copy failed', error);
          copyButton.textContent = 'Copy manually';
        }
      });

      if (appOpenUrl) {
        openAppButton.addEventListener('click', () => {
          const now = Date.now();
          window.location.href = appOpenUrl;
          if (appDownloadUrl) {
            setTimeout(() => {
              if (Date.now() - now < 1500) {
                window.location.href = appDownloadUrl;
              }
            }, 1200);
          }
        });
      } else {
        openAppButton.disabled = true;
        openAppButton.textContent = 'Set COLLABORATOR_APP_OPEN_URL';
      }

      if (appDownloadUrl) {
        downloadAppButton.addEventListener('click', () => {
          window.location.href = appDownloadUrl;
        });
      } else {
        downloadAppButton.disabled = true;
        downloadAppButton.textContent = 'Set COLLABORATOR_APP_DOWNLOAD_URL';
      }

      if (appOpenUrl || appDownloadUrl) {
        actions.style.display = 'flex';
      }

      attemptAccept();
    </script>
  </body>
</html>
